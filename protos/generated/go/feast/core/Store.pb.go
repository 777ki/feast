// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/core/Store.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Store_StoreType int32

const (
	Store_UNKNOWN   Store_StoreType = 0
	Store_REDIS     Store_StoreType = 1
	Store_BIGQUERY  Store_StoreType = 2
	Store_CASSANDRA Store_StoreType = 3
)

var Store_StoreType_name = map[int32]string{
	0: "UNKNOWN",
	1: "REDIS",
	2: "BIGQUERY",
	3: "CASSANDRA",
}

var Store_StoreType_value = map[string]int32{
	"UNKNOWN":   0,
	"REDIS":     1,
	"BIGQUERY":  2,
	"CASSANDRA": 3,
}

func (x Store_StoreType) String() string {
	return proto.EnumName(Store_StoreType_name, int32(x))
}

func (Store_StoreType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4b177bc9ccf64875, []int{0, 0}
}

type Store struct {
	// Name of the store.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type of store.
	Type Store_StoreType `protobuf:"varint,2,opt,name=type,proto3,enum=feast.core.Store_StoreType" json:"type,omitempty"`
	// URI to connect to the database. Should contain all necessary information
	// to connect to and write/read to the store.
	DatabaseURI string `protobuf:"bytes,3,opt,name=databaseURI,proto3" json:"databaseURI,omitempty"`
	// Feature sets to subscribe to. Regex strings are allowed, in the form of
	// featureSetId:version.
	// Valid options for version:
	//     latest: only subscribe to latest version of feature set
	//     [version number]: pin to a specific version
	//     [version number]^: subscribe to all versions larger than or equal to [version number]
	Subscriptions        []string `protobuf:"bytes,4,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Store) Reset()         { *m = Store{} }
func (m *Store) String() string { return proto.CompactTextString(m) }
func (*Store) ProtoMessage()    {}
func (*Store) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b177bc9ccf64875, []int{0}
}

func (m *Store) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Store.Unmarshal(m, b)
}
func (m *Store) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Store.Marshal(b, m, deterministic)
}
func (m *Store) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Store.Merge(m, src)
}
func (m *Store) XXX_Size() int {
	return xxx_messageInfo_Store.Size(m)
}
func (m *Store) XXX_DiscardUnknown() {
	xxx_messageInfo_Store.DiscardUnknown(m)
}

var xxx_messageInfo_Store proto.InternalMessageInfo

func (m *Store) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Store) GetType() Store_StoreType {
	if m != nil {
		return m.Type
	}
	return Store_UNKNOWN
}

func (m *Store) GetDatabaseURI() string {
	if m != nil {
		return m.DatabaseURI
	}
	return ""
}

func (m *Store) GetSubscriptions() []string {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func init() {
	proto.RegisterEnum("feast.core.Store_StoreType", Store_StoreType_name, Store_StoreType_value)
	proto.RegisterType((*Store)(nil), "feast.core.Store")
}

func init() { proto.RegisterFile("feast/core/Store.proto", fileDescriptor_4b177bc9ccf64875) }

var fileDescriptor_4b177bc9ccf64875 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0xed, 0xd6, 0xa9, 0xfd, 0xe6, 0xa4, 0x7c, 0x07, 0x29, 0x78, 0x29, 0xc3, 0x43, 0x4f,
	0x0d, 0x28, 0xde, 0x6d, 0xdd, 0x90, 0x22, 0x74, 0x9a, 0x5a, 0x44, 0x6f, 0x69, 0xf7, 0x59, 0xab,
	0xac, 0x29, 0x49, 0x76, 0xd8, 0x1f, 0xf5, 0xf7, 0xc8, 0x32, 0x70, 0xf3, 0x12, 0xc2, 0xf3, 0x26,
	0x0f, 0xbc, 0x2f, 0x5c, 0x7c, 0x90, 0xd0, 0x86, 0xd5, 0x52, 0x11, 0x2b, 0x8c, 0x54, 0x14, 0xf7,
	0x4a, 0x1a, 0x89, 0x60, 0x79, 0xbc, 0xe5, 0xd3, 0x1f, 0x07, 0x46, 0x36, 0x43, 0x04, 0xb7, 0x13,
	0x2b, 0x0a, 0x9c, 0xd0, 0x89, 0x3c, 0x6e, 0xef, 0xc8, 0xc0, 0x35, 0x9b, 0x9e, 0x82, 0x41, 0xe8,
	0x44, 0xe7, 0xd7, 0x97, 0xf1, 0xfe, 0x63, 0xbc, 0x13, 0xda, 0xf3, 0x65, 0xd3, 0x13, 0xb7, 0x0f,
	0x31, 0x84, 0xf1, 0x52, 0x18, 0x51, 0x09, 0x4d, 0x25, 0xcf, 0x82, 0xa1, 0x75, 0x1d, 0x22, 0xbc,
	0x82, 0x89, 0x5e, 0x57, 0xba, 0x56, 0x6d, 0x6f, 0x5a, 0xd9, 0xe9, 0xc0, 0x0d, 0x87, 0x91, 0xc7,
	0xff, 0xc3, 0xe9, 0x1d, 0x78, 0x7f, 0x6a, 0x1c, 0xc3, 0x49, 0x99, 0x3f, 0xe6, 0x8b, 0xd7, 0xdc,
	0x3f, 0x42, 0x0f, 0x46, 0x7c, 0x3e, 0xcb, 0x0a, 0xdf, 0xc1, 0x33, 0x38, 0x4d, 0xb3, 0x87, 0xe7,
	0x72, 0xce, 0xdf, 0xfc, 0x01, 0x4e, 0xc0, 0xbb, 0x4f, 0x8a, 0x22, 0xc9, 0x67, 0x3c, 0xf1, 0x87,
	0xe9, 0x02, 0x0e, 0x6a, 0xa6, 0x60, 0x6d, 0x4f, 0xdb, 0xfa, 0xef, 0xb7, 0x4d, 0x6b, 0x3e, 0xd7,
	0x55, 0x5c, 0xcb, 0x15, 0x6b, 0xe4, 0x17, 0x7d, 0xb3, 0xdd, 0x4e, 0x76, 0x1c, 0xcd, 0x1a, 0xea,
	0x48, 0x09, 0x43, 0x4b, 0xd6, 0x48, 0xb6, 0x5f, 0xb0, 0x3a, 0xb6, 0xf9, 0xcd, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xfc, 0x93, 0xc6, 0xdd, 0x56, 0x01, 0x00, 0x00,
}
