// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/types/FeatureRowExtended.proto

package types // import "github.com/gojektech/feast/protos/generated/go/feast/types"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Error struct {
	Cause                string   `protobuf:"bytes,1,opt,name=cause,proto3" json:"cause,omitempty"`
	Transform            string   `protobuf:"bytes,2,opt,name=transform,proto3" json:"transform,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	StackTrace           string   `protobuf:"bytes,4,opt,name=stackTrace,proto3" json:"stackTrace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_FeatureRowExtended_a05d4d4ba2df7272, []int{0}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

func (m *Error) GetTransform() string {
	if m != nil {
		return m.Transform
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetStackTrace() string {
	if m != nil {
		return m.StackTrace
	}
	return ""
}

type Attempt struct {
	Attempts             int32    `protobuf:"varint,1,opt,name=attempts,proto3" json:"attempts,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attempt) Reset()         { *m = Attempt{} }
func (m *Attempt) String() string { return proto.CompactTextString(m) }
func (*Attempt) ProtoMessage()    {}
func (*Attempt) Descriptor() ([]byte, []int) {
	return fileDescriptor_FeatureRowExtended_a05d4d4ba2df7272, []int{1}
}
func (m *Attempt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attempt.Unmarshal(m, b)
}
func (m *Attempt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attempt.Marshal(b, m, deterministic)
}
func (dst *Attempt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attempt.Merge(dst, src)
}
func (m *Attempt) XXX_Size() int {
	return xxx_messageInfo_Attempt.Size(m)
}
func (m *Attempt) XXX_DiscardUnknown() {
	xxx_messageInfo_Attempt.DiscardUnknown(m)
}

var xxx_messageInfo_Attempt proto.InternalMessageInfo

func (m *Attempt) GetAttempts() int32 {
	if m != nil {
		return m.Attempts
	}
	return 0
}

func (m *Attempt) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type FeatureRowExtended struct {
	Row                  *FeatureRow          `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
	LastAttempt          *Attempt             `protobuf:"bytes,2,opt,name=lastAttempt,proto3" json:"lastAttempt,omitempty"`
	FirstSeen            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=firstSeen,proto3" json:"firstSeen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FeatureRowExtended) Reset()         { *m = FeatureRowExtended{} }
func (m *FeatureRowExtended) String() string { return proto.CompactTextString(m) }
func (*FeatureRowExtended) ProtoMessage()    {}
func (*FeatureRowExtended) Descriptor() ([]byte, []int) {
	return fileDescriptor_FeatureRowExtended_a05d4d4ba2df7272, []int{2}
}
func (m *FeatureRowExtended) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureRowExtended.Unmarshal(m, b)
}
func (m *FeatureRowExtended) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureRowExtended.Marshal(b, m, deterministic)
}
func (dst *FeatureRowExtended) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureRowExtended.Merge(dst, src)
}
func (m *FeatureRowExtended) XXX_Size() int {
	return xxx_messageInfo_FeatureRowExtended.Size(m)
}
func (m *FeatureRowExtended) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureRowExtended.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureRowExtended proto.InternalMessageInfo

func (m *FeatureRowExtended) GetRow() *FeatureRow {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *FeatureRowExtended) GetLastAttempt() *Attempt {
	if m != nil {
		return m.LastAttempt
	}
	return nil
}

func (m *FeatureRowExtended) GetFirstSeen() *timestamp.Timestamp {
	if m != nil {
		return m.FirstSeen
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "feast.types.Error")
	proto.RegisterType((*Attempt)(nil), "feast.types.Attempt")
	proto.RegisterType((*FeatureRowExtended)(nil), "feast.types.FeatureRowExtended")
}

func init() {
	proto.RegisterFile("feast/types/FeatureRowExtended.proto", fileDescriptor_FeatureRowExtended_a05d4d4ba2df7272)
}

var fileDescriptor_FeatureRowExtended_a05d4d4ba2df7272 = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4f, 0xc2, 0x30,
	0x14, 0xc6, 0x83, 0x38, 0x91, 0xb7, 0x5b, 0x43, 0xc2, 0xb2, 0x10, 0x35, 0xc4, 0x03, 0x5e, 0xda,
	0x04, 0x13, 0x63, 0xbc, 0x49, 0x82, 0x57, 0xcd, 0xe4, 0xe4, 0xad, 0x1b, 0x6f, 0x05, 0x61, 0xeb,
	0xd2, 0xbe, 0x05, 0xfd, 0xb3, 0xfc, 0x0f, 0x0d, 0x2d, 0xc8, 0x08, 0xde, 0xf6, 0xfa, 0xfd, 0x5e,
	0xbf, 0x6f, 0xfd, 0xe0, 0x36, 0x47, 0x69, 0x49, 0xd0, 0x77, 0x85, 0x56, 0xbc, 0xa0, 0xa4, 0xda,
	0x60, 0xa2, 0x37, 0xd3, 0x2f, 0xc2, 0x72, 0x8e, 0x73, 0x5e, 0x19, 0x4d, 0x9a, 0x85, 0x8e, 0xe2,
	0x8e, 0x8a, 0xaf, 0x95, 0xd6, 0x6a, 0x8d, 0xc2, 0x49, 0x69, 0x9d, 0x0b, 0x5a, 0x16, 0x68, 0x49,
	0x16, 0x95, 0xa7, 0xe3, 0xc1, 0xff, 0x77, 0x7a, 0x75, 0x58, 0x43, 0x30, 0x35, 0x46, 0x1b, 0xd6,
	0x83, 0x20, 0x93, 0xb5, 0xc5, 0xa8, 0x75, 0xd3, 0x1a, 0x75, 0x13, 0x3f, 0xb0, 0x01, 0x74, 0xc9,
	0xc8, 0xd2, 0xe6, 0xda, 0x14, 0xd1, 0x99, 0x53, 0x0e, 0x07, 0x2c, 0x82, 0x4e, 0x81, 0xd6, 0x4a,
	0x85, 0x51, 0xdb, 0x69, 0xfb, 0x91, 0x5d, 0x01, 0x58, 0x92, 0xd9, 0x6a, 0x66, 0x64, 0x86, 0xd1,
	0xb9, 0x13, 0x1b, 0x27, 0xc3, 0x57, 0xe8, 0x3c, 0x13, 0x61, 0x51, 0x11, 0x8b, 0xe1, 0x52, 0xfa,
	0x4f, 0xeb, 0xbc, 0x83, 0xe4, 0x6f, 0x66, 0x23, 0x08, 0x70, 0x9b, 0xce, 0x59, 0x87, 0x63, 0xc6,
	0x1b, 0x7f, 0xce, 0x5d, 0xee, 0xc4, 0x03, 0xc3, 0x9f, 0x16, 0xb0, 0xd3, 0x07, 0x63, 0x77, 0xd0,
	0x36, 0x7a, 0xe3, 0xee, 0x0d, 0xc7, 0xfd, 0xa3, 0xf5, 0x03, 0x9d, 0x6c, 0x19, 0xf6, 0x00, 0xe1,
	0x5a, 0x5a, 0xda, 0xc5, 0xda, 0x39, 0xf6, 0x8e, 0x56, 0x76, 0x5a, 0xd2, 0x04, 0xd9, 0x23, 0x74,
	0xf3, 0xa5, 0xb1, 0xf4, 0x8e, 0x58, 0xba, 0x67, 0x08, 0xc7, 0x31, 0xf7, 0xa5, 0xf0, 0x7d, 0x29,
	0x7c, 0xb6, 0x2f, 0x25, 0x39, 0xc0, 0x93, 0x14, 0x9a, 0x4d, 0x4e, 0xfa, 0xa7, 0xf9, 0xdf, 0xb6,
	0xfb, 0x1f, 0x4f, 0x6a, 0x49, 0x8b, 0x3a, 0xe5, 0x99, 0x2e, 0x84, 0xd2, 0x9f, 0xb8, 0x22, 0xcc,
	0x16, 0xc2, 0xd7, 0xea, 0x1c, 0xac, 0x50, 0x58, 0xa2, 0x91, 0x84, 0x73, 0xa1, 0xb4, 0x68, 0x14,
	0x9e, 0x5e, 0x38, 0xe0, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0x93, 0xf7, 0x42, 0x51, 0x5a, 0x02,
	0x00, 0x00,
}
