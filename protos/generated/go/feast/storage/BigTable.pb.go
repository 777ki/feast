// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feast/storage/BigTable.proto

package storage // import "github.com/gojektech/feast/protos/generated/go/feast/storage"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gojektech/feast/protos/generated/go/feast/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BigTableRowKey struct {
	// This should be the first 7 characters of a sha1 of the entityKey proto encoded
	Sha1Prefix string `protobuf:"bytes,1,opt,name=sha1Prefix,proto3" json:"sha1Prefix,omitempty"`
	EntityKey  string `protobuf:"bytes,2,opt,name=entityKey,proto3" json:"entityKey,omitempty"`
	// This should be String.valueOf(int64.MAX_VALUE - roundToEntityGranularity(eventTimestamp))
	ReversedMillis       string   `protobuf:"bytes,3,opt,name=reversedMillis,proto3" json:"reversedMillis,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BigTableRowKey) Reset()         { *m = BigTableRowKey{} }
func (m *BigTableRowKey) String() string { return proto.CompactTextString(m) }
func (*BigTableRowKey) ProtoMessage()    {}
func (*BigTableRowKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_BigTable_567faf2225013b15, []int{0}
}
func (m *BigTableRowKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigTableRowKey.Unmarshal(m, b)
}
func (m *BigTableRowKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigTableRowKey.Marshal(b, m, deterministic)
}
func (dst *BigTableRowKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigTableRowKey.Merge(dst, src)
}
func (m *BigTableRowKey) XXX_Size() int {
	return xxx_messageInfo_BigTableRowKey.Size(m)
}
func (m *BigTableRowKey) XXX_DiscardUnknown() {
	xxx_messageInfo_BigTableRowKey.DiscardUnknown(m)
}

var xxx_messageInfo_BigTableRowKey proto.InternalMessageInfo

func (m *BigTableRowKey) GetSha1Prefix() string {
	if m != nil {
		return m.Sha1Prefix
	}
	return ""
}

func (m *BigTableRowKey) GetEntityKey() string {
	if m != nil {
		return m.EntityKey
	}
	return ""
}

func (m *BigTableRowKey) GetReversedMillis() string {
	if m != nil {
		return m.ReversedMillis
	}
	return ""
}

func init() {
	proto.RegisterType((*BigTableRowKey)(nil), "feast.storage.BigTableRowKey")
}

func init() {
	proto.RegisterFile("feast/storage/BigTable.proto", fileDescriptor_BigTable_567faf2225013b15)
}

var fileDescriptor_BigTable_567faf2225013b15 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xb1, 0x4b, 0xc4, 0x30,
	0x14, 0x87, 0x39, 0x05, 0xe1, 0x02, 0x77, 0x43, 0x16, 0x8b, 0x1c, 0x22, 0x0e, 0xe2, 0xd4, 0x87,
	0xb8, 0x3a, 0x75, 0x3d, 0x84, 0xe3, 0x10, 0x07, 0x71, 0x49, 0xef, 0x7e, 0x4d, 0xa3, 0xb1, 0x29,
	0xc9, 0x6b, 0x35, 0xff, 0xbd, 0x98, 0xb6, 0x68, 0x5d, 0x7f, 0xdf, 0x17, 0xf8, 0xf2, 0xc4, 0xa6,
	0x82, 0x0a, 0x4c, 0x81, 0x9d, 0x57, 0x1a, 0x54, 0x18, 0xfd, 0xa4, 0x4a, 0x8b, 0xbc, 0xf5, 0x8e,
	0x9d, 0x5c, 0x25, 0x9a, 0x8f, 0xf4, 0xe2, 0x7c, 0x90, 0x39, 0xb6, 0x08, 0xf4, 0xac, 0x6c, 0x37,
	0x7a, 0xd7, 0xbd, 0x58, 0x4f, 0x2f, 0xf7, 0xee, 0x73, 0x8b, 0x28, 0x2f, 0x85, 0x08, 0xb5, 0xba,
	0xdb, 0x79, 0x54, 0xe6, 0x2b, 0x5b, 0x5c, 0x2d, 0x6e, 0x97, 0xfb, 0x3f, 0x8b, 0xdc, 0x88, 0x25,
	0x1a, 0x36, 0x1c, 0xb7, 0x88, 0xd9, 0x49, 0xc2, 0xbf, 0x83, 0xbc, 0x11, 0x6b, 0x8f, 0x1e, 0x3e,
	0xe0, 0xf8, 0x68, 0xac, 0x35, 0x21, 0x3b, 0x4d, 0xca, 0xbf, 0xb5, 0x78, 0x15, 0xf3, 0xc2, 0x62,
	0x35, 0x65, 0xec, 0x7e, 0xba, 0x5e, 0x1e, 0xb4, 0xe1, 0xba, 0x2b, 0xf3, 0x83, 0xfb, 0x20, 0xed,
	0xde, 0xf0, 0xce, 0x38, 0xd4, 0x34, 0xfc, 0x22, 0x95, 0x07, 0xd2, 0x68, 0xe0, 0x15, 0xe3, 0x48,
	0xda, 0xd1, 0xec, 0x18, 0xe5, 0x59, 0x52, 0xee, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x35, 0x57,
	0xc5, 0xb7, 0x24, 0x01, 0x00, 0x00,
}
