# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from feast.specs.EntitySpec_pb2 import (
    EntitySpec as feast___specs___EntitySpec_pb2___EntitySpec,
)

from feast.specs.FeatureSpec_pb2 import (
    FeatureSpec as feast___specs___FeatureSpec_pb2___FeatureSpec,
)

from feast.specs.StorageSpec_pb2 import (
    StorageSpec as feast___specs___StorageSpec_pb2___StorageSpec,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Mapping as typing___Mapping,
    MutableMapping as typing___MutableMapping,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class ImportJobSpecs(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    jobId = ... # type: typing___Text

    @property
    def sourceSpec(self) -> SourceSpec: ...

    @property
    def entitySpec(self) -> feast___specs___EntitySpec_pb2___EntitySpec: ...

    @property
    def featureSpecs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[feast___specs___FeatureSpec_pb2___FeatureSpec]: ...

    @property
    def sinkStorageSpec(self) -> feast___specs___StorageSpec_pb2___StorageSpec: ...

    @property
    def errorsStorageSpec(self) -> feast___specs___StorageSpec_pb2___StorageSpec: ...

    def __init__(self,
        *,
        jobId : typing___Optional[typing___Text] = None,
        sourceSpec : typing___Optional[SourceSpec] = None,
        entitySpec : typing___Optional[feast___specs___EntitySpec_pb2___EntitySpec] = None,
        featureSpecs : typing___Optional[typing___Iterable[feast___specs___FeatureSpec_pb2___FeatureSpec]] = None,
        sinkStorageSpec : typing___Optional[feast___specs___StorageSpec_pb2___StorageSpec] = None,
        errorsStorageSpec : typing___Optional[feast___specs___StorageSpec_pb2___StorageSpec] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ImportJobSpecs: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"entitySpec",u"errorsStorageSpec",u"sinkStorageSpec",u"sourceSpec"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"entitySpec",u"errorsStorageSpec",u"featureSpecs",u"jobId",u"sinkStorageSpec",u"sourceSpec"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"entitySpec",b"entitySpec",u"errorsStorageSpec",b"errorsStorageSpec",u"sinkStorageSpec",b"sinkStorageSpec",u"sourceSpec",b"sourceSpec"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"entitySpec",b"entitySpec",u"errorsStorageSpec",b"errorsStorageSpec",u"featureSpecs",b"featureSpecs",u"jobId",b"jobId",u"sinkStorageSpec",b"sinkStorageSpec",u"sourceSpec",b"sourceSpec"]) -> None: ...

class SourceSpec(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class SourceType(int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: int) -> str: ...
        @classmethod
        def Value(cls, name: str) -> SourceSpec.SourceType: ...
        @classmethod
        def keys(cls) -> typing___List[str]: ...
        @classmethod
        def values(cls) -> typing___List[SourceSpec.SourceType]: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[str, SourceSpec.SourceType]]: ...
        KAFKA = typing___cast(SourceSpec.SourceType, 0)
    KAFKA = typing___cast(SourceSpec.SourceType, 0)

    class OptionsEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key = ... # type: typing___Text
        value = ... # type: typing___Text

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> SourceSpec.OptionsEntry: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(self, field_name: typing_extensions___Literal[u"key",u"value"]) -> None: ...
        else:
            def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    type = ... # type: SourceSpec.SourceType

    @property
    def options(self) -> typing___MutableMapping[typing___Text, typing___Text]: ...

    def __init__(self,
        *,
        type : typing___Optional[SourceSpec.SourceType] = None,
        options : typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> SourceSpec: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"options",u"type"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"options",b"options",u"type",b"type"]) -> None: ...
