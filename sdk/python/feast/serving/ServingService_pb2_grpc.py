# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from feast.serving import ServingService_pb2 as feast_dot_serving_dot_ServingService__pb2


class ServingServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetFeastServingVersion = channel.unary_unary(
        '/feast.serving.ServingService/GetFeastServingVersion',
        request_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingVersionRequest.SerializeToString,
        response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingVersionResponse.FromString,
        )
    self.GetFeastServingType = channel.unary_unary(
        '/feast.serving.ServingService/GetFeastServingType',
        request_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingTypeRequest.SerializeToString,
        response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingTypeResponse.FromString,
        )
    self.GetOnlineFeatures = channel.unary_unary(
        '/feast.serving.ServingService/GetOnlineFeatures',
        request_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeaturesRequest.SerializeToString,
        response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetOnlineFeaturesResponse.FromString,
        )
    self.GetBatchFeatures = channel.unary_unary(
        '/feast.serving.ServingService/GetBatchFeatures',
        request_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeaturesRequest.SerializeToString,
        response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetBatchFeaturesResponse.FromString,
        )
    self.GetBatchFeaturesFromCompletedJob = channel.unary_unary(
        '/feast.serving.ServingService/GetBatchFeaturesFromCompletedJob',
        request_serializer=feast_dot_serving_dot_ServingService__pb2.GetBatchFeaturesFromCompletedJobRequest.SerializeToString,
        response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetBatchFeaturesFromCompletedJobResponse.FromString,
        )
    self.GetStagingLocation = channel.unary_unary(
        '/feast.serving.ServingService/GetStagingLocation',
        request_serializer=feast_dot_serving_dot_ServingService__pb2.GetStagingLocationRequest.SerializeToString,
        response_deserializer=feast_dot_serving_dot_ServingService__pb2.GetStagingLocationResponse.FromString,
        )
    self.LoadBatchFeatures = channel.unary_unary(
        '/feast.serving.ServingService/LoadBatchFeatures',
        request_serializer=feast_dot_serving_dot_ServingService__pb2.LoadBatchFeaturesRequest.SerializeToString,
        response_deserializer=feast_dot_serving_dot_ServingService__pb2.LoadBatchFeaturesResponse.FromString,
        )
    self.ReloadJobStatus = channel.unary_unary(
        '/feast.serving.ServingService/ReloadJobStatus',
        request_serializer=feast_dot_serving_dot_ServingService__pb2.ReloadJobStatusRequest.SerializeToString,
        response_deserializer=feast_dot_serving_dot_ServingService__pb2.ReloadJobStatusResponse.FromString,
        )


class ServingServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetFeastServingVersion(self, request, context):
    """Get version information about this Feast serving.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFeastServingType(self, request, context):
    """Get Feast serving store type: online or batch.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOnlineFeatures(self, request, context):
    """Get online features synchronously.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBatchFeatures(self, request, context):
    """Get batch features asynchronously. 

    The client should check and reload the status of the returned job 
    periodically to determine if the job has completed successfully or with 
    an error. If the job completes successfully, the client shoud call 
    GetBatchFeaturesFromCompletedJob to retrieve the feature values.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBatchFeaturesFromCompletedJob(self, request, context):
    """Get the URI(s) to download batch feature values from a succesful download job.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStagingLocation(self, request, context):
    """Get the URI prefix where the client can upload files to be accessed by Feast serving.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LoadBatchFeatures(self, request, context):
    """Load batch features from a list of source URIs asynchronously. The source 
    URIs must represent a feature set of a specific version.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReloadJobStatus(self, request, context):
    """Reload the job status with the latest state.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ServingServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetFeastServingVersion': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeastServingVersion,
          request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingVersionRequest.FromString,
          response_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingVersionResponse.SerializeToString,
      ),
      'GetFeastServingType': grpc.unary_unary_rpc_method_handler(
          servicer.GetFeastServingType,
          request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingTypeRequest.FromString,
          response_serializer=feast_dot_serving_dot_ServingService__pb2.GetFeastServingTypeResponse.SerializeToString,
      ),
      'GetOnlineFeatures': grpc.unary_unary_rpc_method_handler(
          servicer.GetOnlineFeatures,
          request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeaturesRequest.FromString,
          response_serializer=feast_dot_serving_dot_ServingService__pb2.GetOnlineFeaturesResponse.SerializeToString,
      ),
      'GetBatchFeatures': grpc.unary_unary_rpc_method_handler(
          servicer.GetBatchFeatures,
          request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetFeaturesRequest.FromString,
          response_serializer=feast_dot_serving_dot_ServingService__pb2.GetBatchFeaturesResponse.SerializeToString,
      ),
      'GetBatchFeaturesFromCompletedJob': grpc.unary_unary_rpc_method_handler(
          servicer.GetBatchFeaturesFromCompletedJob,
          request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetBatchFeaturesFromCompletedJobRequest.FromString,
          response_serializer=feast_dot_serving_dot_ServingService__pb2.GetBatchFeaturesFromCompletedJobResponse.SerializeToString,
      ),
      'GetStagingLocation': grpc.unary_unary_rpc_method_handler(
          servicer.GetStagingLocation,
          request_deserializer=feast_dot_serving_dot_ServingService__pb2.GetStagingLocationRequest.FromString,
          response_serializer=feast_dot_serving_dot_ServingService__pb2.GetStagingLocationResponse.SerializeToString,
      ),
      'LoadBatchFeatures': grpc.unary_unary_rpc_method_handler(
          servicer.LoadBatchFeatures,
          request_deserializer=feast_dot_serving_dot_ServingService__pb2.LoadBatchFeaturesRequest.FromString,
          response_serializer=feast_dot_serving_dot_ServingService__pb2.LoadBatchFeaturesResponse.SerializeToString,
      ),
      'ReloadJobStatus': grpc.unary_unary_rpc_method_handler(
          servicer.ReloadJobStatus,
          request_deserializer=feast_dot_serving_dot_ServingService__pb2.ReloadJobStatusRequest.FromString,
          response_serializer=feast_dot_serving_dot_ServingService__pb2.ReloadJobStatusResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'feast.serving.ServingService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
