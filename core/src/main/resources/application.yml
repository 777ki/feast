#
# Copyright 2018 The Feast Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

grpc:
  # The port number Feast Serving GRPC service should listen on
  port: 6565
  # This allows client to discover GRPC endpoints easily
  # https://github.com/grpc/grpc-java/blob/master/documentation/server-reflection-tutorial.md
  enable-reflection: true

feast:
#  version: @project.version@
  store:
    # Serving store type. For more information on the available types
    # see Store.proto. To provision feast without a serving store,
    # leave this value blank.
    serving-type: REDIS
    # Serving store options. The necessary option values depend on the
    # store. For more information, see Store.proto.
    serving-options:
      host: localhost
      port: 6379
      # Store subscriptions, as a comma delimited string of featureName:versions
      # to populate this store with. Regex is supported for featureName, and
      # expressions for version.
      subscriptions: ".*:>0"
    # Warehouse store type. For more information on the available types
    # see Store.proto. To provision feast without a warehouse store,
    # leave this value blank.
    warehouse-type: ""
  jobs:
    # Runner type for feature population jobs. Currently supported runner types are
    # DirectRunner and DataflowRunner.
    runner: DirectRunner
    # Key-value dict of job options to be passed to the population jobs.
    options: {}
  stream:
    # Feature stream type. Only kafka is supported.
    type: kafka
    # Feature stream options.
    options:
      bootstrapServers: "kafka:9092"
      replicationFactor: "1"
      partitions: "1"
  statsd:
    host: ${STATSD_HOST:localhost}
    port: ${STATSD_PORT:8125}

spring:
  jpa:
    properties.hibernate.format_sql: true
    hibernate.naming.physical-strategy=org.hibernate.boot.model.naming: PhysicalNamingStrategyStandardImpl
    hibernate.ddl-auto: update
  datasource:
    url: jdbc:postgresql://${DB_HOST:127.0.0.1}:${DB_PORT:5432}/${DB_TABLE:postgres}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}

management:
  metrics:
    export:
      simple:
        enabled: false
      statsd:
        enabled: true
        host: ${STATSD_HOST:localhost}
        port: ${STATSD_PORT:8125}
